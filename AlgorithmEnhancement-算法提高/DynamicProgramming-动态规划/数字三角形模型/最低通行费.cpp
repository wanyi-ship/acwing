// 一个商人穿过一个N×N的正方形的网格，去参加一个非常重要的商务活动。他要从网格的左上角进，右下角出。每穿越中间1个小方格，都要花费1个单位时间。商人必须在(2N−1)个单位时间穿越出去。而在经过中间的每个小方格时，都需要缴纳一定的费用。这个商人期望在规定时间内用最少费用穿越出去。请问至少需要多少费用？
// 注意：不能对角穿越各个小方格（即，只能向上下左右四个方向移动且不能离开网格）。
// 
// 输入格式
// 第一行是一个整数，表示正方形的宽度N.
// 后面N行，每行N个不大于100的正整数，为网格上每个小方格的费用。
// 
// 输出格式
// 输出一个整数，表示至少需要的费用。
// 
// 数据范围
// 1≤N≤100

#include<iostream>

using namespace std;

int n;
int nums[110][110];

int main(){
    cin>>n;
    for (int i = 1; i <= n; i ++ ){
        for (int j = 1; j <= n; j ++ ){
            cin>>nums[i][j];
            if(i==1)nums[i][j]+=nums[i][j-1];
            else if(j==1)nums[i][j]+=nums[i-1][j];
            else nums[i][j]+=min(nums[i-1][j],nums[i][j-1]);
        }
    }
    cout<<nums[n][n]<<endl;
}